name: build and run tests
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # install dependencies
      - name: cmake
        run: |
          sudo apt-get purge cmake
          version=3.18
          build=2
          mkdir ~/temp
          cd ~/temp
          wget https://cmake.org/files/v$version/cmake-$version.$build.tar.gz
          tar -xzvf cmake-$version.$build.tar.gz
          cd cmake-$version.$build/
          ./bootstrap
          make -j $(nproc)
          sudo make install
      - name: Clang 12
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 12
      - name: cache-boost
        uses: actions/cache@v1.0.3
        id: cache-boost
        with:
          path: "~/boost"
          key: "libboost-dev"
      - name: Install boost
        env:
          CACHE_HIT: ${{steps.cache-boost.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --force --recursive ~/boost/* /
          else
            sudo apt-get update && sudo apt-get install -yq libboost-dev
            mkdir -p ~/boost
            for dep in libboost-dev; do
              dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/boost/
            done
          fi
      - name: gtest
        run: |
          sudo apt-get install -yq libgtest-dev
          cd /usr/src/googletest/googletest
          sudo mkdir build
          cd build
          sudo cmake ..
          sudo make -j $(nproc)
      # build project
      - name: create build folder
        run: mkdir build
      - name: configure project
        run: |
          cd build
          cmake .. -DCMAKE_C_COMPILER=clang-12 -DCMAKE_CXX_COMPILER=clang++-12
          make -j $(nproc)
      - name: run tests
        run: ./FDCore_test
